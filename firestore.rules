
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read anyone's profile (for mentions, etc.)
    // But can only create and update their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Users can only manage their own tasks.
    match /tasks/{taskId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Users can only manage their own short-term goals.
    match /shortTermGoals/{goalId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Users can only manage their own notes.
    match /notes/{noteId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
    
    // All authenticated users can read resources.
    // Users can only create resources if they are logged in.
    // Only the original submitter can update or delete a resource.
    match /resources/{resourceId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.submittedByUid;
        allow update, delete: if request.auth.uid == resource.data.submittedByUid;
    }
    
    // Public chat messages are readable by any authenticated user.
    // Users can only create messages as themselves.
    // Users can only delete their own messages.
    match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow delete: if request.auth.uid == resource.data.userId;
    }

    // Rules for private conversations and their sub-collections (messages).
    match /conversations/{conversationId} {
        // A user can only read/write to a conversation if they are a participant.
        allow read, create, update, delete: if request.auth.uid in resource.data.participants;
        
        // Rules for the messages sub-collection within a conversation.
        match /messages/{messageId} {
            // A user can read messages if they are part of the parent conversation.
            allow read: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
            // A user can create a message if they are part of the conversation and the author.
            allow create: if request.auth.uid == request.resource.data.userId && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
            // A user can only delete their own messages.
            allow delete: if request.auth.uid == resource.data.userId;
        }
    }
  }
}
